##########
# GLOBAL #
##########
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal

global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\end{tabular}\n$0"
	snip.expand_anon(final_str)

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"
	snip.expand_anon(final_str)
endglobal


###############
# ENVIRONMENT #
###############

snippet beg "begin{} / end{}" bi
\begin{$1}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet cnt "Center" bi
\begin{center}
	${0:${VISUAL}}
\end{center}
endsnippet

snippet desc "Description" bi
\begin{description}
	\item[${1:${VISUAL}}] $0
\end{description}
endsnippet
snippet lemma "Lemma" bi
\begin{lemma}
	${0:${VISUAL}}
\end{lemma}
endsnippet

snippet prop "Proposition" bi
\begin{prop}[$1]
	${0:${VISUAL}}
\end{prop}
endsnippet

snippet thrm "Theorem" bi
\begin{theorem}[$1]
	${0:${VISUAL}}
\end{theorem}
endsnippet

snippet post "postulate" bi
\begin{postulate}[$1]
	${0:${VISUAL}}
\end{postulate}
endsnippet

snippet prf "Proof" bi
\begin{myproof}[$1]
	${0:${VISUAL}}
\end{myproof}
endsnippet

snippet def "Definition" bi
\begin{definition}[$1]
	${0:${VISUAL}}
\end{definition}
endsnippet

snippet nte "Note" bi
\begin{note}[$1]
	${0:${VISUAL}}
\end{note}
endsnippet

snippet prob "Problem" bi
\begin{problem}[$1]
	${0:${VISUAL}}
\end{problem}
endsnippet

snippet corl "Corollary" bi
\begin{corollary}[$1]
	${0:${VISUAL}}
\end{corollary}
endsnippet

snippet example "Example" bi
\begin{example}[$1]
	${0:${VISUAL}}
\end{example}
endsnippet

snippet notion "Notation" bi
\begin{notation}[$1]
	$0${VISUAL}
\end{notation}
endsnippet

snippet conc "Conclusion" bi
\begin{conclusion}[$1]
	$0${VISUAL}
\end{conclusion}
endsnippet

snippet fig "Figure environment" bi
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.5\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet subfig "subfigure env" bi
\begin{subfigure}{${1:.49\textwidth}}
\begin{center}
\includegraphics[width=${2:.98}\textwidth]{$3}
\end{center}
\end{subfigure}
endsnippet

snippet enum "Enumerate" bi
\begin{enumerate}
	\item ${0:${VISUAL}}
\end{enumerate}
endsnippet

snippet item "Itemize" bi
\begin{itemize}
	\item ${0:${VISUAL}}
\end{itemize}
endsnippet

snippet case "cases" bi
\begin{cases}
	${0:${VISUAL}}
\end{cases}
endsnippet

snippet abs "abstract environment" b
\begin{abstract}
	${0:${VISUAL}}
.\end{abstract}
endsnippet

snippet tab "tabular / array environment" b
	\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
	$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}

	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
		$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet

snippet mint "Minted Environment fuer Code Highlighting" b
\begin{minted}[bgcolor=black!3!white]{${1:bash}}
	${0:${VISUAL:CODESCHNIPSEL}}
\end{minted}
endsnippet

snippet mintline "InlineMint Env" 
\mintinline{${1:bash}}{$2}
endsnippet

snippet tcbdef "tcolorbox Definition Env" b
\begin{tcbdefinition}{${1:Prägnante Beschreibung der Definition}}{${2:Referenzname}}
	${0:Definitionsbeispieltext}
\end{tcbdefinition}
endsnippet

snippet tcbrmk "tcolorbox Remark Env" b
\begin{tcbremark}{${1:Prägnante Beschreibung der Bemerkung}}{${2:Referenzname}}
	${0:Bemerkungstext}
\end{tcbremark}
endsnippet

snippet tcbteo "tcolorbox Theorem Env" b
\begin{tcbtheorem}{${1:Prägnante Satz-Beschreibung}}{${2: Satzreferenz}}
	${0:Satztext/inhalt}
\end{tcbtheorem}
endsnippet

snippet tcbmint "Code Highlighting Env via tcblistings, much more beautiful but also bigger" b
\begin{tcblisting}{breakable,colback=blue!5!white,colframe=blue!50!white!30!black,title=${1:
Titeltext},overlay={\begin{tcbclipinterior}\fill[red!20!blue!20!white] (frame.south west)
rectangle ([xshift=5mm]frame.north west);\end{tcbclipinterior}},listing
only,enhanced,minted language=${2:language},left=5mm, minted style=colorful,minted options={breaklines,numbersep=3mm,fontsize=\small, breakanywhere=true, linenos,numberblanklines=true, autogobble} }
${0:${VISUAL:CODESCHNIPSEL}}
\end{tcblisting}
endsnippet
	
snippet lst "listing env" b
\begin{lstlisting}[${1:language=HTML}]
${0:${VISUAL:CODE}}
\end{lstlisting}
endsnippet

snippet ilst "inline listing env" 
\lstinline|${1:${VISUAL:CODE}}| $0
endsnippet

snippet mulcol "Multicol environment" b
\begin{multicols*}{${1:#Colums}}[${2:Optional HeaderText}]
	$0
\end{multicols*}
endsnippet

snippet minip "Minipage" b
\begin{minipage}[${1|c,t,b|}]{${2:0.5}${3:\textwidth}}
	${0:${VISUAL}}
\end{minipage}

endsnippet

snippet wrapfig "Floating element" b
\begin{wrapfigure}{l}{0.7\textwidth}
	\centering
	$0
\end{wrapfigure}
endsnippet

snippet clr "xcolor" i 
	\color{${1|blue,mattblue,gold,red,lila,green,black,lightblue,darkblue|}}{${2:${VISUAL:Text}}} $0
endsnippet
##############
# REFERENCES #
##############

snippet href "Hyperref Referenz, zb fuer URLs" 
	\href{${1:${VISUAL:www.youtube.com}}}{${2:YOUTUBE}} $0
endsnippet

snippet todo "ToDo-Note marker on the marginside" 
\todo[noline]{${1:${VISUAL:BEISPIELTEXT}}}
endsnippet

####################
#  TextFormatting  #
####################
snippet tc "textcolor" i
\textcolor{${1:blue}}{${2:${VISUAL}}} $0
endsnippet

snippet tbf "Bold Text" i
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet tit "Text Italic" i 
\textit{${1:${VISUAL}}} $0
endsnippet

snippet tul "Underline Text" i 
\underline{${1:${VISUAL}}} $0
endsnippet

snippet vsp "vspace" 
\vspace{${1|3pt,5pt,7pt,10pt|}}
$0
endsnippet

snippet qt "enquote" i
\enquote{${1:${VISUAL}}} $0
endsnippet 
########
# MATH #
########

context "math()"
snippet max "max()" w
\max_{${1:i=1,...,n}} $0
endsnippet

context "math()"
snippet cc "subset" w
\subset 
endsnippet

context "math()"
snippet inn "in " w
\in 
endsnippet

context "math()"
snippet Nn "cap" w
\cap 
endsnippet

context "math()"
snippet UU "cup" w
\cup 
endsnippet

context "math()"
snippet uuu "bigcup" w
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet nnn "bigcap" w
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet HH "H" w
\mathbb{H}
endsnippet

context "math()"
snippet DD "D" w
\mathbb{D}
endsnippet

context "math()"
snippet bigoh "Big-Oh-Notation" 
\mathcal{O}($1) $0
endsnippet

context "math()"
snippet hat "entspricht Zeichen" i
\widehat{=} 
endsnippet
context "math()"
snippet NN "NaturalNumbers" w
\mathbb{N}
endsnippet

context "math()"
snippet RN "RealNumbers" w
\mathbb{R}
endsnippet

snippet inmath "Inline Math" w
\\(${1}\\) $0
endsnippet

snippet dm "Display Math" w
\[
	${1:${VISUAL}}
\]$0
endsnippet

snippet mm "Inline-Math-Mode" 
\$ $1 \$ $0
endsnippet

context "math()"
snippet ff "Fraction" w
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet compl "Complement" i
^{c}
endsnippet

context "math()"
snippet ss "Super Script" Ai
^{$1}$0
endsnippet

context "math()"
snippet __ "subscript" Ai
_{$1}$0
endsnippet

context "math()"
snippet srt "Square Root" wi
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet srto "... Root" wi
\sqrt[$1]{${2:${VISUAL}}}$0
endsnippet

context "math()"
snippet bf "Bold" wi
{\bf{${1:${VISUAL}}}}\ $0
endsnippet

context "math()"
snippet it "Italic" wi
\it{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet un "Underline" wi
\un{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet rm "Text in mathmode" wi
\textrm{${1:${VISUAL}}}\ $0
endsnippet

snippet itm "Item" wi
\item ${0:${VISUAL}}
endsnippet

snippet ceil "Ceil" w
\left\lceil $1 \right\rceil $0
endsnippet

snippet floor "Floor" w
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet pmat "Pmat" w
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "Bmat" w
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "Left( right)" w
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

context "math()"
snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet lra "leftangle rightangle" wi
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" w
\overline{$1}$0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet ooo "\infty" w
\infty
endsnippet

context "math()"
snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet => "Implies" w
\implies
endsnippet

context "math()"
snippet =< "Implied by" w
\impliedby
endsnippet

context "math()"
snippet iff "iff" w
\iff
endsnippet

context "math()"
snippet == "Equals" w
&= $1 \\\\
endsnippet

context "math()"
snippet != "Not Equal" w
\neq 
endsnippet

context "math()"
snippet <= "leq" Aw
\le 
endsnippet

context "math()"
snippet >= "geq" Aw
\ge 
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet lll "l" Aw
\ell
endsnippet

context "math()"
snippet xx "cross" Aw
\times 
endsnippet

snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rw
\\`!p snip.rv = match.group(1)`
endsnippet

snippet <! "normal" Aw
\triangleleft 
endsnippet

snippet "(\d|\w)+invs" "inverse" Awr
`!p snip.rv = match.group(1)`^{-1}
endsnippet

snippet !> "mapsto" Aw
\mapsto 
endsnippet

context "math()"
snippet exists "Es gibt mindestens..." 
\exists
endsnippet

context "math()"
snippet exist "Es gibt genau ein.." 
\exists!
endsnippet

context "math()"
snippet fall "für alle" 
\forall
endsnippet

##########
# TABLES #
#########

pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet


###########
# POSTFIX #
###########

snippet bar "bar" wi
\bar{${1:${VISUAL}}}$0
endsnippet

snippet "\<(.*?)\|" "bra" wri
\bra{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

snippet "\|(.*?)\>" "ket" wri
\ket{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

snippet "(.*)\\bra{(.*?)}([^\|]*?)\>" "braket" Awri
`!p snip.rv = match.group(1)`\braket{`!p snip.rv = match.group(2)`}{`!p snip.rv = match.group(3).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet


#############
# PRE-AMBLE #
#############

snippet pac "usepackage - removes square braces if options removed" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

snippet docls "Document Class" bA
\documentclass{$1}$0
endsnippet

snippet temp "Template"
\documentclass{${1|article,report,letter,book|}}

\input{$HOME/Vorlagen/latex/template.tex}

\title{${2:TITEL}}
\author{${3:Raphael Niederauer}}
\date{${4:`date +%F`}}


\begin{document}
	
	% ---- Head & Footnote Settings ----
	\pagestyle{fancy}
	\fancyhf{} % Clear default settings
	\renewcommand{\headrulewidth}{2pt}
	\renewcommand{\footrulewidth}{1pt}

	%\fancyhead[LE, RO]{\leftmark}
	%\fancyhead[RO]{\nouppercase{\rightmark}}
	%\fancyfoot[RO,LE]{\thepage}
	%\fancyfoot[LO,RE]{\leftmark}	
	% ----------------------------------

	\maketitle
	\newpage
	
	\tableofcontents
	\newpage

	$0
\end{document}
endsnippet

snippet xcls "define xcolor definitions" 
\definecolor{lila}{rgb}{0.54, 0.17, 0.89}
\definecolor{red}{rgb}{0.89, 0.0, 0.13}
\definecolor{lightblue}{rgb}{0.0, 0.75, 1.0}    
\definecolor{mattblue}{rgb}{0.16, 0.32, 0.75}
\definecolor{coolblack}{rgb}{0.0, 0.18, 0.39}
\definecolor{darkblue}{rgb}{0.0, 0.0, 0.55}
\definecolor{darkorange}{rgb}{1.0, 0.55, 0.0}
\definecolor{gold}{rgb}{1.0, 0.75, 0.0}
\definecolor{green}{rgb}{0.0, 0.5, 0.0}
\definecolor{black}{rgb}{0.0, 0.0, 0.0}	
endsnippet

#########
# OTHER #
#########

snippet acl "Acroynm expanded" bi
\acl{${1:acronym}}
endsnippet

snippet ac "Acroynm normal" bi
\ac{${1:acronym}}
endsnippet

snippet ni "Non-indented paragraph" bi
\noindent
endsnippet

snippet do "This is a ToDo Reminder as a comment" b
	% ---- TODO: `echo $USER`@`date +"%Y-%m-%d %H:%M"` ${1:REMINDERTEXT} ----
endsnippet

snippet comment "A comment Snippet" b
% ****** `echo $USER`@`date +"%Y-%m-%d %H:%M"` ${1:${VISUAL:KOMMENTAR}} ******
endsnippet

############
# SECTIONS #
############

snippet chap "Chapter" wi
\chapter{$1${VISUAL}}
endsnippet

snippet sec "Section" wi
\section{$1${VISUAL}}
endsnippet

snippet sec* "Section*" wi
\section*{$1${VISUAL}}
endsnippet

snippet sub "Subsection" wi
\subsection{$1${VISUAL}}
endsnippet

snippet sub* "Subsection*" wi
\subsection*{$1${VISUAL}}
endsnippet

snippet subsub "Subsection" wi
\subsubsection{$1${VISUAL}}
endsnippet

snippet subsub* "Subsubsection" wi
\subsubsection*{$1${VISUAL}}
endsnippet

snippet par "Paragraph" wi
\paragraph{$1${VISUAL}}
endsnippet

snippet par* "Paragraph*" wi
\paragraph*{$1${VISUAL}}
endsnippet

snippet subpar "Sub Paragraph" wi
\subparagraph{$1${VISUAL}}
endsnippet

snippet subpar* "Sub Paragraph*" wi
\subparagraph*{$1${VISUAL}}
endsnippet


##########
#  TikZ  #
##########

snippet line "TikZLine" b
\tikz \draw ($1,$2) ${3|--,..|} ($4,$5) $3 ($6,$7); $0
endsnippet

snippet tikz "TikzEnv" b
\begin{tikzpicture}
	$1
\end{tikzpicture}
endsnippet

snippet form "Draw circle ellipse rectangle grid arc" b
${1|\draw,\filldraw|}${6:[${7:red}${8:,dashed}]} (${2:ccX},${3:ccY}) ${4|circle,ellipse,rectangle,grid|} ${5|(1),(1 and 2),(2\,2)|};
$0
endsnippet

snippet shade "shade tikz" b
\shade[ball color=${1:blue!10!white,opacity=0.20}] (${2:1},${3:1}) ${4|circle,ellipse,rectanglegrid|} ${5|(1),(1 and 2),(2\,2)|};
endsnippet
# vim:ft=snippets:
